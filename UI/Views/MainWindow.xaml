<Window x:Class="CSVGenerator.UI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CSVGenerator.UI.Views"
        mc:Ignorable="d"
        Title="{DynamicResource AppTitle}" Width="600" Top="100" Left="100" SizeToContent="Height"
        WindowStartupLocation="Manual"
        ResizeMode="CanMinimize"
        Icon="pack://application:,,,/CSVGenerator;component/app.ico">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Merge your other dictionaries if needed -->
            </ResourceDictionary.MergedDictionaries>

            <!-- == Resources for Unit Button == -->
            <SolidColorBrush x:Key="PrimaryBrush" Color="#2196F3"/>
            <ControlTemplate x:Key="UnitButtonTextOnlyTemplate" TargetType="{x:Type Button}">
                <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
            </ControlTemplate>
            <Style x:Key="UnitButtonMinimalStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="#EEFFFFFF" CornerRadius="3" BorderThickness="1" BorderBrush="#2196F3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#F5F5F5"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#1976D2"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#E3F2FD"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#0D47A1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Panel.ZIndex" Value="10"/>
                <Setter Property="ToolTip" Value="Click to toggle between mm and inch"/>
            </Style>
            <!-- == END Unit Button Resources == -->

            <!-- Original Animation Definitions -->
            <Storyboard x:Key="HoverAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.1" />
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.1" />
            </Storyboard>
            <Storyboard x:Key="UnhoverAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.1" />
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.1" />
            </Storyboard>
            <Storyboard x:Key="ClickAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.95" Duration="0:0:0.05" />
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.95" Duration="0:0:0.05" />
            </Storyboard>
            <Storyboard x:Key="PulsingBorderAnimation" RepeatBehavior="Forever">
                <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" From="10" To="20" Duration="0:0:0.6" AutoReverse="True" />
                <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)" From="0.7" To="1.0" Duration="0:0:0.6" AutoReverse="True" />
            </Storyboard>

            <!-- Original Button Style -->
            <Style x:Key="ModernButton" TargetType="Button">
                <Setter Property="Background" Value="#4CAF50"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="15,10"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform"><Setter.Value><ScaleTransform ScaleX="1" ScaleY="1"/></Setter.Value></Setter>
                <Setter Property="Effect"><Setter.Value><DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5"/></Setter.Value></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter"><BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/></EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave"><BeginStoryboard Storyboard="{StaticResource UnhoverAnimation}"/></EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseDown"><BeginStoryboard Storyboard="{StaticResource ClickAnimation}"/></EventTrigger>
                    <Trigger Property="IsEnabled" Value="False"><Setter Property="Background" Value="#9E9E9E"/></Trigger>
                </Style.Triggers>
            </Style>

            <!-- Improved TextBox Style -->
            <Style x:Key="ModernTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="#F5F5F5"/>
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Margin" Value="5,0,5,5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#BDBDBD"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                    <!-- Ensure the ScrollViewer has proper margins to prevent text from being cut off -->
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                 HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                                 VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                                 Margin="0"
                                                 SnapsToDevicePixels="True"
                                                 Padding="0,0,0,0"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True"><Setter Property="BorderBrush" Value="#2196F3"/></Trigger>
                    <Trigger Property="IsFocused" Value="True"><Setter Property="BorderBrush" Value="#2196F3"/></Trigger>
                </Style.Triggers>
            </Style>

            <!-- Original ComboBox Style -->
            <Style x:Key="ModernComboBox" TargetType="ComboBox">
                <Setter Property="Background" Value="#F5F5F5"/>
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Margin" Value="5,0,5,5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#BDBDBD"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True"><Setter Property="BorderBrush" Value="#2196F3"/></Trigger>
                    <Trigger Property="IsFocused" Value="True"><Setter Property="BorderBrush" Value="#2196F3"/></Trigger>
                </Style.Triggers>
            </Style>

            <!-- Program ComboBox Style with special dropdown button visibility -->
            <Style x:Key="ProgramComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ModernComboBox}">
                <!-- Set minimum height to ensure consistent vertical space -->
                <Setter Property="MinHeight" Value="26"/>

                <!-- Set explicit padding for better text positioning -->
                <Setter Property="Padding" Value="2,2,5,3"/>

                <!-- Ensure content is vertically centered -->
                <Setter Property="VerticalContentAlignment" Value="Center"/>

                <!-- Improve rendering alignment -->
                <Setter Property="SnapsToDevicePixels" Value="True"/>

                <EventSetter Event="Loaded" Handler="ProgramComboBox_Loaded"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox x:Name="PART_EditableTextBox"
                                                         Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Background="Transparent"
                                                         BorderThickness="0"
                                                         Padding="{TemplateBinding Padding}"
                                                         FontSize="{TemplateBinding FontSize}"
                                                         Foreground="{TemplateBinding Foreground}"
                                                         VerticalContentAlignment="Center"
                                                         HorizontalContentAlignment="Left"
                                                         VerticalAlignment="Stretch"
                                                         Height="Auto"
                                                         MinHeight="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                                                         Margin="0"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox x:Name="PART_EditableTextBox"
                                                         Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Background="Transparent"
                                                         BorderThickness="0"
                                                         Padding="{TemplateBinding Padding}"
                                                         FontSize="{TemplateBinding FontSize}"
                                                         Foreground="{TemplateBinding Foreground}"
                                                         VerticalContentAlignment="Center"
                                                         HorizontalContentAlignment="Left"
                                                         VerticalAlignment="Stretch"
                                                         Height="Auto"
                                                         MinHeight="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                                                         Margin="0"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>



            <!-- Original Label Style -->
            <Style x:Key="ModernLabel" TargetType="Label">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Margin" Value="5,5,5,0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <!-- Delete Button Template -->
            <ControlTemplate x:Key="DeleteButtonTemplate" TargetType="Button">
                <Border Background="Transparent" BorderThickness="0" Padding="0">
                    <TextBlock Text="X" Foreground="Red" FontWeight="Bold" FontFamily="Arial" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </ControlTemplate>

            <!-- Delete Button Style -->
            <Style x:Key="DeleteButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#F44336"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock Text="X" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#22F44336"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <!-- Main Content Grid -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>  <!-- Header -->
                <RowDefinition Height="Auto"/>  <!-- Ad Banner -->
                <RowDefinition Height="*"/>     <!-- Input Fields Area -->
                <RowDefinition Height="Auto"/>  <!-- Action Fields -->
                <RowDefinition Height="Auto"/>  <!-- Footer Ad Banner -->
            </Grid.RowDefinitions>

            <!-- Header -->
            <Border Grid.Row="0" Background="#000000" Padding="20,10,20,20">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource AppSubtitle}" FontSize="18" FontWeight="Bold" Foreground="White" HorizontalAlignment="Left" Margin="0,0,0,5"/>
                    <Button x:Name="btnShowLog" Grid.Row="0" Grid.Column="1" Width="32" Height="32" Margin="10,0,0,0" Background="Transparent" BorderThickness="0" ToolTip="Show Log Window" VerticalAlignment="Top" HorizontalAlignment="Right" Click="BtnShowLog_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="16" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"><Setter TargetName="ButtonBorder" Property="Background" Value="#22FFFFFF"/></Trigger>
                                    <Trigger Property="IsPressed" Value="True"><Setter TargetName="ButtonBorder" Property="Background" Value="#44FFFFFF"/></Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                        <TextBlock Text="{DynamicResource Copyright}" FontSize="11" Foreground="#E1F5FE" HorizontalAlignment="Right" Margin="0,0,0,5" Cursor="Hand" MouseDown="Copyright_MouseDown"/>
                        <TextBlock Text="{DynamicResource MenuCheckForUpdates}" FontSize="12" FontWeight="SemiBold" Foreground="#E1F5FE" HorizontalAlignment="Right" Margin="0,0,0,5" Cursor="Hand" MouseDown="CheckForUpdates_MouseDown"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Text Ad Banner -->
            <Border x:Name="adBannerContainer" Grid.Row="1" Background="Transparent" Padding="0,0" Margin="0,0" Visibility="Collapsed">
                <TextBlock x:Name="txtAdBanner" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="0,0" Margin="0,0" Foreground="#333333" TextWrapping="NoWrap" Height="22"/>
            </Border>

            <!-- Input Fields Container -->
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel Margin="20,10">

                    <!-- BomSplit File Selection -->
                    <Grid Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="{DynamicResource SelectBomSplitFile}" Style="{StaticResource ModernLabel}" HorizontalAlignment="Left" Margin="5,0,0,0" Padding="0,0,0,2" FontWeight="SemiBold"/>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid Height="35">
                                    <TextBox x:Name="txtBomSplitPath" Style="{StaticResource ModernTextBox}" IsReadOnly="True" AllowDrop="True" PreviewDragOver="TextBox_PreviewDragOver" Drop="BomSplitPath_Drop" Text="{DynamicResource DropFileHere}" Padding="5,5,45,5" TextWrapping="NoWrap" VerticalContentAlignment="Center"/>
                                    <Button x:Name="btnBomSplitUnit" Style="{StaticResource UnitButtonMinimalStyle}" Content="mm" Width="40" Height="20" Click="BtnBomSplitUnit_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,3"/>
                                </Grid>
                            </Grid>
                            <Button x:Name="btnSelectBomSplit" Grid.Column="1" Style="{StaticResource ModernButton}" Width="110" Height="35" VerticalAlignment="Center" Margin="5,0,5,0" Click="BtnSelectBomSplit_Click">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{DynamicResource Browse}" VerticalAlignment="Center" FontSize="13" FontWeight="SemiBold"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Grid> <!-- Closing BomSplit Grid -->

                    <!-- CadPins File Selection -->
                    <Grid Margin="0,10,0,10">
                         <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="{DynamicResource SelectCadPinsFile}" Style="{StaticResource ModernLabel}" HorizontalAlignment="Left" Margin="5,0,0,0" Padding="0,0,0,2" FontWeight="SemiBold"/>
                        <Grid Grid.Row="1">
                             <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid Height="35">
                                    <TextBox x:Name="txtCadPinsPath" Style="{StaticResource ModernTextBox}" IsReadOnly="True" AllowDrop="True" PreviewDragOver="TextBox_PreviewDragOver" Drop="CadPinsPath_Drop" Text="{DynamicResource DropFileHere}" Padding="5,5,45,5" TextWrapping="NoWrap" VerticalContentAlignment="Center"/>
                                    <Button x:Name="btnCadPinsUnit" Style="{StaticResource UnitButtonMinimalStyle}" Content="mm" Width="40" Height="20" Click="BtnCadPinsUnit_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,3"/>
                                </Grid>
                                <!-- Comment moved here: Make sure NO characters/comments follow the closing </Grid> -->
                            </Grid>
                            <Button x:Name="btnSelectCadPins" Grid.Column="1" Style="{StaticResource ModernButton}" Width="110" Height="35" VerticalAlignment="Center" Margin="5,0,5,0" Click="BtnSelectCadPins_Click">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{DynamicResource Browse}" VerticalAlignment="Center" FontSize="13" FontWeight="SemiBold"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Grid> <!-- Closing CadPins Grid -->

                    <!-- Client and Program Selection -->
                    <Grid Margin="0,10,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*"/>
                            <ColumnDefinition Width="0.7*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Margin="0,0,5,0">
                            <Label Content="{DynamicResource Client}" Style="{StaticResource ModernLabel}" HorizontalAlignment="Left" Margin="5,0,0,0" Padding="0,0,0,2" FontWeight="SemiBold"/>
                            <ComboBox x:Name="cmbClient" Style="{StaticResource ModernComboBox}" IsEditable="True" LostFocus="CmbClient_LostFocus" StaysOpenOnEdit="True" IsTextSearchEnabled="False" DropDownOpened="ComboBox_DropDownOpened">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="True">
                                            <Button x:Name="ClientDeleteButton" DockPanel.Dock="Right" Width="20" Height="20" Margin="0,0,0,0" Click="ClientDeleteButton_Click" Tag="{Binding}" Template="{StaticResource DeleteButtonTemplate}"/>
                                            <TextBlock Text="{Binding}" VerticalAlignment="Center" Margin="5,0,5,0"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Margin="5,0,0,0">
                            <Label Content="{DynamicResource Program}" Style="{StaticResource ModernLabel}" HorizontalAlignment="Left" Margin="5,0,0,0" Padding="0,0,0,2" FontWeight="SemiBold"/>
                            <ComboBox x:Name="cmbProgram" Style="{StaticResource ProgramComboBoxStyle}" IsEditable="True" Height="30" LostFocus="CmbProgram_LostFocus" StaysOpenOnEdit="True" IsTextSearchEnabled="False" DropDownOpened="ComboBox_DropDownOpened" PreviewMouseDown="ProgramComboBox_PreviewMouseDown">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="True">
                                            <Button x:Name="ProgramDeleteButton" DockPanel.Dock="Right" Width="20" Height="20" Margin="0,0,0,0" Click="ProgramDeleteButton_Click" Tag="{Binding}" Template="{StaticResource DeleteButtonTemplate}"/>
                                            <TextBlock Text="{Binding}" VerticalAlignment="Center" Margin="5,0,5,0"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </Grid> <!-- Closing Client/Program Grid -->

                </StackPanel>
            </ScrollViewer> <!-- Closing ScrollViewer for Input Fields -->

            <!-- Action Fields -->
            <Grid Grid.Row="3" Margin="20,10,20,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,0,0,10">
                    <Grid.ColumnDefinitions><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                    <ProgressBar x:Name="progressBar" Height="20" Minimum="0" Maximum="100" Value="0"/>
                    <TextBlock x:Name="txtProgress" Text="" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions><RowDefinition Height="Auto"/><RowDefinition Height="Auto"/></Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions><ColumnDefinition Width="*"/><ColumnDefinition Width="Auto"/></Grid.ColumnDefinitions>
                        <Button x:Name="btnGenerate" Grid.Column="0" Content="{DynamicResource GenerateCSV}" Style="{StaticResource ModernButton}" Height="40" FontSize="16" FontWeight="Bold" Click="BtnGenerate_Click">
                            <Button.Effect><DropShadowEffect Color="#4CAF50" Direction="0" ShadowDepth="0" BlurRadius="15" Opacity="0.7"/></Button.Effect>
                        </Button>
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="Auto"/></Grid.ColumnDefinitions>
                            <Grid Grid.Column="1" Width="10"/>
                            <Button x:Name="btnLanguageSwitch" Grid.Column="2" Width="40" Height="40" Margin="5,10,10,10" Background="Transparent" BorderThickness="0" HorizontalAlignment="Right" ToolTip="{DynamicResource LanguageButton}" Click="BtnLanguageSwitch_Click">
                                <Image x:Name="imgLanguageFlag" Width="32" Height="32"/>
                                <Button.RenderTransform><ScaleTransform ScaleX="1" ScaleY="1"/></Button.RenderTransform>
                                <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="20" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter"><BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/></EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave"><BeginStoryboard Storyboard="{StaticResource UnhoverAnimation}"/></EventTrigger>
                                            <EventTrigger RoutedEvent="PreviewMouseDown"><BeginStoryboard Storyboard="{StaticResource ClickAnimation}"/></EventTrigger>
                                            <EventTrigger RoutedEvent="PreviewMouseUp"><BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/></EventTrigger>
                                            <Trigger Property="IsMouseOver" Value="True"><Setter TargetName="ButtonBorder" Property="Background" Value="#22FFFFFF"/></Trigger>
                                            <Trigger Property="IsPressed" Value="True"><Setter TargetName="ButtonBorder" Property="Background" Value="#44FFFFFF"/></Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid> <!-- Closing Action Fields Grid -->

            <!-- Footer Ad Banner -->
            <Grid Grid.Row="4" Margin="0,0,0,3" VerticalAlignment="Bottom">
                <!-- Image Ad Container -->
                <Grid x:Name="adContainer" Margin="0,0,0,3" Height="65" VerticalAlignment="Bottom" Visibility="Collapsed"/>
            </Grid>

        </Grid> <!-- Closing Main Content Grid -->
    </Grid> <!-- Closing Root Grid -->
</Window>