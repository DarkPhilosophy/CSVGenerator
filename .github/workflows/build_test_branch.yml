name: Test Build CSVGenerator

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout Common library (test branch)
      uses: actions/checkout@v4
      with:
        repository: DarkPhilosophy/Common
        path: Common
        ref: test
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: nuget/setup-nuget@v2

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config', '**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install .NET Framework Developer Pack
      run: choco install netfx-4.8-devpack -y
      if: steps.cache.outputs.cache-hit != 'true'

    - name: List directory structure
      run: |
        dir
        dir -Recurse -Include *.csproj -Depth 3

    - name: Restore NuGet packages
      run: |
        dotnet restore CSVGenerator.csproj -f net48 --configfile nuget.config
      env:
        NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    - name: Build project for .NET Framework 4.8 only
      run: |
        dotnet build CSVGenerator.csproj -f net48 -c Release
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Build failed for .NET Framework 4.8"
          exit 1
        }
        Write-Output "Build succeeded for .NET Framework 4.8"

    - name: Verify build outputs
      run: |
        $exeFiles = Get-ChildItem -Path . -Include *.exe -Recurse -Exclude "*\Common\*","*\packages\*","*\obj\*"
        if ($exeFiles) {
          $exeFiles | ForEach-Object {
            Write-Output "Found executable: $($_.FullName)"
            $versionInfo = $_.VersionInfo
            Write-Output "Version: $($versionInfo.FileVersion)"
          }
        } else {
          Write-Error "No executable files found!"
          exit 1
        }

    - name: Upload build artifacts (for testing only)
      uses: actions/upload-artifact@v4
      with:
        name: CSVGenerator-TestBuild-net48
        path: |
          **/bin/Release/net48/**/*.exe
          **/bin/Release/net48/**/*.dll
        if-no-files-found: error
        retention-days: 7
